{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projet\\\\FaBSwiss\\\\src\\\\components\\\\Standings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { TournamentService, PlayerService, MatchService } from '../services/database';\nimport { PairingService } from '../services/pairing';\nimport { MATCH_RESULT } from '../models/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Standings = () => {\n  _s();\n  const {\n    id: tournamentId\n  } = useParams();\n  const [tournament, setTournament] = useState(null);\n  const [standings, setStandings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        const [tournamentData, playersData, matchesData] = await Promise.all([TournamentService.getTournament(tournamentId), PlayerService.getPlayers(tournamentId), MatchService.getMatches(tournamentId)]);\n        setTournament(tournamentData);\n\n        // Calculer les standings\n        const calculatedStandings = PairingService.calculateStandings(playersData, matchesData);\n\n        // Calculer les tiebreakers détaillés\n        const standingsWithTiebreakers = calculatedStandings.map((player, index) => {\n          const playerMatches = matchesData.filter(m => (m.player1Id === player.id || m.player2Id === player.id) && m.result !== MATCH_RESULT.PENDING);\n\n          // Calcul du Match Win Percentage des adversaires\n          let opponentPoints = 0;\n          let opponentTotalMatches = 0;\n          let totalGamesWon = 0;\n          let totalGamesPlayed = 0;\n          playerMatches.forEach(match => {\n            const isPlayer1 = match.player1Id === player.id;\n            const opponentId = isPlayer1 ? match.player2Id : match.player1Id;\n            const opponent = playersData.find(p => p.id === opponentId);\n            if (opponent) {\n              // Points de l'adversaire\n              const opponentMatches = matchesData.filter(m => (m.player1Id === opponentId || m.player2Id === opponentId) && m.result !== MATCH_RESULT.PENDING);\n              const opponentStats = calculatePlayerStats(opponent.id, opponentMatches);\n              opponentPoints += opponentStats.points;\n              opponentTotalMatches += opponentStats.totalMatches;\n            }\n\n            // Games du joueur\n            if (isPlayer1) {\n              totalGamesWon += match.player1Games || 0;\n              totalGamesPlayed += (match.player1Games || 0) + (match.player2Games || 0);\n            } else {\n              totalGamesWon += match.player2Games || 0;\n              totalGamesPlayed += (match.player1Games || 0) + (match.player2Games || 0);\n            }\n          });\n          const opponentMatchWinPercentage = opponentTotalMatches > 0 ? Math.max(0.33, opponentPoints / (opponentTotalMatches * 3)) : 0.33;\n          const gameWinPercentage = totalGamesPlayed > 0 ? Math.max(0.33, totalGamesWon / totalGamesPlayed) : 0.33;\n          return {\n            ...player,\n            rank: index + 1,\n            matchesPlayed: playerMatches.length,\n            totalGamesWon,\n            totalGamesPlayed,\n            gameWinPercentage: gameWinPercentage,\n            opponentMatchWinPercentage: opponentMatchWinPercentage,\n            tiebreakers: {\n              opponentMatchWinPercentage,\n              gameWinPercentage,\n              opponentGameWinPercentage: 0 // Simplified for this implementation\n            }\n          };\n        });\n        setStandings(standingsWithTiebreakers);\n      } catch (err) {\n        setError('Erreur lors du chargement: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, [tournamentId]);\n  const calculatePlayerStats = (playerId, matches) => {\n    let wins = 0;\n    let losses = 0;\n    let draws = 0;\n    matches.forEach(match => {\n      if (match.result === MATCH_RESULT.PENDING) return;\n      if (match.player1Id === playerId) {\n        if (match.result === MATCH_RESULT.PLAYER1_WIN) wins++;else if (match.result === MATCH_RESULT.PLAYER2_WIN) losses++;else if (match.result === MATCH_RESULT.DRAW) draws++;\n      } else if (match.player2Id === playerId) {\n        if (match.result === MATCH_RESULT.PLAYER2_WIN) wins++;else if (match.result === MATCH_RESULT.PLAYER1_WIN) losses++;else if (match.result === MATCH_RESULT.DRAW) draws++;\n      }\n    });\n    return {\n      wins,\n      losses,\n      draws,\n      points: wins * 3 + draws,\n      totalMatches: wins + losses + draws\n    };\n  };\n  const formatPercentage = value => {\n    return `${(value * 100).toFixed(1)}%`;\n  };\n  const getRankClass = rank => {\n    if (rank === 1) return 'text-gold';\n    if (rank === 2) return 'text-silver';\n    if (rank === 3) return 'text-bronze';\n    if (rank <= 8) return 'text-top8';\n    return '';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Chargement du classement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 12\n    }, this);\n  }\n  if (!tournament) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"Tournoi introuvable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-between mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Classement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-left\",\n          children: tournament.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/tournament/${tournamentId}`,\n          className: \"btn btn-secondary\",\n          children: \"Retour au Tournoi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-small\",\n        onClick: () => setError(null),\n        style: {\n          marginLeft: '1rem'\n        },\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: [\"Classement G\\xE9n\\xE9ral\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2\",\n            children: [\"(\", standings.filter(p => p.isActive).length, \" joueurs actifs)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), standings.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucun joueur trouv\\xE9.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table standings-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rang\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Joueur\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"H\\xE9ros\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Points\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"V-D-N\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Games\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"GW%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"OMW%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Statut\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: standings.map(player => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: !player.isActive ? 'text-muted' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `rank ${getRankClass(player.rank)}`,\n                  children: player.rank\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: player.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: player.hero || '—'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"points\",\n                  children: player.points\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [player.wins, \"-\", player.losses, \"-\", player.draws]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [player.totalGamesWon || 0, \"/\", player.totalGamesPlayed || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatPercentage(player.gameWinPercentage || 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatPercentage(player.opponentMatchWinPercentage || 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `status-badge ${player.isActive ? 'status-complete' : 'status-pending'}`,\n                  children: player.isActive ? 'Actif' : 'Drop'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this)]\n            }, player.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Explication des Tiebreakers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Game Win Percentage (GW%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Pourcentage de games gagn\\xE9es par le joueur. Minimum de 33.3% appliqu\\xE9 pour les calculs.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Opponent Match Win Percentage (OMW%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Moyenne des pourcentages de victoires en match de tous les adversaires rencontr\\xE9s. Minimum de 33.3% par adversaire.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), standings.length >= 8 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Top 8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-2\",\n        children: standings.slice(0, 8).map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-between p-2 border rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `rank ${getRankClass(player.rank)}`,\n              children: [\"#\", player.rank]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"ml-2\",\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"points\",\n              children: [player.points, \" pts\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2 text-muted\",\n              children: [\"(\", player.wins, \"-\", player.losses, \"-\", player.draws, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this)]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(Standings, \"WpLNzQh40j46N6PDc5uSiS+ye5Y=\", false, function () {\n  return [useParams];\n});\n_c = Standings;\nexport default Standings;\nvar _c;\n$RefreshReg$(_c, \"Standings\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","TournamentService","PlayerService","MatchService","PairingService","MATCH_RESULT","jsxDEV","_jsxDEV","Standings","_s","id","tournamentId","tournament","setTournament","standings","setStandings","loading","setLoading","error","setError","loadData","tournamentData","playersData","matchesData","Promise","all","getTournament","getPlayers","getMatches","calculatedStandings","calculateStandings","standingsWithTiebreakers","map","player","index","playerMatches","filter","m","player1Id","player2Id","result","PENDING","opponentPoints","opponentTotalMatches","totalGamesWon","totalGamesPlayed","forEach","match","isPlayer1","opponentId","opponent","find","p","opponentMatches","opponentStats","calculatePlayerStats","points","totalMatches","player1Games","player2Games","opponentMatchWinPercentage","Math","max","gameWinPercentage","rank","matchesPlayed","length","tiebreakers","opponentGameWinPercentage","err","message","playerId","matches","wins","losses","draws","PLAYER1_WIN","PLAYER2_WIN","DRAW","formatPercentage","value","toFixed","getRankClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","to","onClick","style","marginLeft","isActive","hero","slice","_c","$RefreshReg$"],"sources":["D:/Projet/FaBSwiss/src/components/Standings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { TournamentService, PlayerService, MatchService } from '../services/database';\r\nimport { PairingService } from '../services/pairing';\r\nimport { MATCH_RESULT } from '../models/types';\r\n\r\nconst Standings = () => {\r\n  const { id: tournamentId } = useParams();\r\n  const [tournament, setTournament] = useState(null);\r\n  const [standings, setStandings] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const [tournamentData, playersData, matchesData] = await Promise.all([\r\n          TournamentService.getTournament(tournamentId),\r\n          PlayerService.getPlayers(tournamentId),\r\n          MatchService.getMatches(tournamentId)\r\n        ]);\r\n        \r\n        setTournament(tournamentData);\r\n        \r\n        // Calculer les standings\r\n        const calculatedStandings = PairingService.calculateStandings(playersData, matchesData);\r\n        \r\n        // Calculer les tiebreakers détaillés\r\n        const standingsWithTiebreakers = calculatedStandings.map((player, index) => {\r\n          const playerMatches = matchesData.filter(m => \r\n            (m.player1Id === player.id || m.player2Id === player.id) && \r\n            m.result !== MATCH_RESULT.PENDING\r\n          );\r\n          \r\n          // Calcul du Match Win Percentage des adversaires\r\n          let opponentPoints = 0;\r\n          let opponentTotalMatches = 0;\r\n          let totalGamesWon = 0;\r\n          let totalGamesPlayed = 0;\r\n          \r\n          playerMatches.forEach(match => {\r\n            const isPlayer1 = match.player1Id === player.id;\r\n            const opponentId = isPlayer1 ? match.player2Id : match.player1Id;\r\n            const opponent = playersData.find(p => p.id === opponentId);\r\n            \r\n            if (opponent) {\r\n              // Points de l'adversaire\r\n              const opponentMatches = matchesData.filter(m => \r\n                (m.player1Id === opponentId || m.player2Id === opponentId) && \r\n                m.result !== MATCH_RESULT.PENDING\r\n              );\r\n              \r\n              const opponentStats = calculatePlayerStats(opponent.id, opponentMatches);\r\n              opponentPoints += opponentStats.points;\r\n              opponentTotalMatches += opponentStats.totalMatches;\r\n            }\r\n            \r\n            // Games du joueur\r\n            if (isPlayer1) {\r\n              totalGamesWon += match.player1Games || 0;\r\n              totalGamesPlayed += (match.player1Games || 0) + (match.player2Games || 0);\r\n            } else {\r\n              totalGamesWon += match.player2Games || 0;\r\n              totalGamesPlayed += (match.player1Games || 0) + (match.player2Games || 0);\r\n            }\r\n          });\r\n          \r\n          const opponentMatchWinPercentage = opponentTotalMatches > 0 \r\n            ? Math.max(0.33, (opponentPoints / (opponentTotalMatches * 3))) \r\n            : 0.33;\r\n          \r\n          const gameWinPercentage = totalGamesPlayed > 0 \r\n            ? Math.max(0.33, (totalGamesWon / totalGamesPlayed)) \r\n            : 0.33;\r\n          \r\n          return {\r\n            ...player,\r\n            rank: index + 1,\r\n            matchesPlayed: playerMatches.length,\r\n            totalGamesWon,\r\n            totalGamesPlayed,\r\n            gameWinPercentage: gameWinPercentage,\r\n            opponentMatchWinPercentage: opponentMatchWinPercentage,\r\n            tiebreakers: {\r\n              opponentMatchWinPercentage,\r\n              gameWinPercentage,\r\n              opponentGameWinPercentage: 0 // Simplified for this implementation\r\n            }\r\n          };\r\n        });\r\n        \r\n        setStandings(standingsWithTiebreakers);\r\n      } catch (err) {\r\n        setError('Erreur lors du chargement: ' + err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, [tournamentId]);\r\n\r\n  const calculatePlayerStats = (playerId, matches) => {\r\n    let wins = 0;\r\n    let losses = 0;\r\n    let draws = 0;\r\n    \r\n    matches.forEach(match => {\r\n      if (match.result === MATCH_RESULT.PENDING) return;\r\n      \r\n      if (match.player1Id === playerId) {\r\n        if (match.result === MATCH_RESULT.PLAYER1_WIN) wins++;\r\n        else if (match.result === MATCH_RESULT.PLAYER2_WIN) losses++;\r\n        else if (match.result === MATCH_RESULT.DRAW) draws++;\r\n      } else if (match.player2Id === playerId) {\r\n        if (match.result === MATCH_RESULT.PLAYER2_WIN) wins++;\r\n        else if (match.result === MATCH_RESULT.PLAYER1_WIN) losses++;\r\n        else if (match.result === MATCH_RESULT.DRAW) draws++;\r\n      }\r\n    });\r\n    \r\n    return {\r\n      wins,\r\n      losses,\r\n      draws,\r\n      points: wins * 3 + draws,\r\n      totalMatches: wins + losses + draws\r\n    };\r\n  };\r\n\r\n  const formatPercentage = (value) => {\r\n    return `${(value * 100).toFixed(1)}%`;\r\n  };\r\n\r\n  const getRankClass = (rank) => {\r\n    if (rank === 1) return 'text-gold';\r\n    if (rank === 2) return 'text-silver';\r\n    if (rank === 3) return 'text-bronze';\r\n    if (rank <= 8) return 'text-top8';\r\n    return '';\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Chargement du classement...</div>;\r\n  }\r\n\r\n  if (!tournament) {\r\n    return <div className=\"error\">Tournoi introuvable</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex-between mb-3\">\r\n        <div>\r\n          <h2>Classement</h2>\r\n          <h3 className=\"text-left\">{tournament.name}</h3>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <Link \r\n            to={`/tournament/${tournamentId}`}\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Retour au Tournoi\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error\">\r\n          {error}\r\n          <button \r\n            className=\"btn btn-small\" \r\n            onClick={() => setError(null)}\r\n            style={{ marginLeft: '1rem' }}\r\n          >\r\n            ✕\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h3 className=\"card-title\">\r\n            Classement Général \r\n            <span className=\"ml-2\">\r\n              ({standings.filter(p => p.isActive).length} joueurs actifs)\r\n            </span>\r\n          </h3>\r\n        </div>\r\n\r\n        {standings.length === 0 ? (\r\n          <p>Aucun joueur trouvé.</p>\r\n        ) : (\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table standings-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Rang</th>\r\n                  <th>Joueur</th>\r\n                  <th>Héros</th>\r\n                  <th>Points</th>\r\n                  <th>V-D-N</th>\r\n                  <th>Games</th>\r\n                  <th>GW%</th>\r\n                  <th>OMW%</th>\r\n                  <th>Statut</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {standings.map(player => (\r\n                  <tr key={player.id} className={!player.isActive ? 'text-muted' : ''}>\r\n                    <td>\r\n                      <span className={`rank ${getRankClass(player.rank)}`}>\r\n                        {player.rank}\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <strong>{player.name}</strong>\r\n                    </td>\r\n                    <td>\r\n                      {player.hero || '—'}\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"points\">{player.points}</span>\r\n                    </td>\r\n                    <td>\r\n                      {player.wins}-{player.losses}-{player.draws}\r\n                    </td>\r\n                    <td>\r\n                      {player.totalGamesWon || 0}/{player.totalGamesPlayed || 0}\r\n                    </td>\r\n                    <td>\r\n                      {formatPercentage(player.gameWinPercentage || 0)}\r\n                    </td>\r\n                    <td>\r\n                      {formatPercentage(player.opponentMatchWinPercentage || 0)}\r\n                    </td>\r\n                    <td>\r\n                      <span className={`status-badge ${player.isActive ? 'status-complete' : 'status-pending'}`}>\r\n                        {player.isActive ? 'Actif' : 'Drop'}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Légende des tiebreakers */}\r\n      <div className=\"card mt-3\">\r\n        <div className=\"card-header\">\r\n          <h3 className=\"card-title\">Explication des Tiebreakers</h3>\r\n        </div>\r\n        <div className=\"grid grid-2\">\r\n          <div>\r\n            <h4>Game Win Percentage (GW%)</h4>\r\n            <p>\r\n              Pourcentage de games gagnées par le joueur. \r\n              Minimum de 33.3% appliqué pour les calculs.\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <h4>Opponent Match Win Percentage (OMW%)</h4>\r\n            <p>\r\n              Moyenne des pourcentages de victoires en match de tous les adversaires rencontrés. \r\n              Minimum de 33.3% par adversaire.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Top 8 */}\r\n      {standings.length >= 8 && (\r\n        <div className=\"card mt-3\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"card-title\">Top 8</h3>\r\n          </div>\r\n          <div className=\"grid grid-2\">\r\n            {standings.slice(0, 8).map(player => (\r\n              <div key={player.id} className=\"flex-between p-2 border rounded\">\r\n                <div>\r\n                  <span className={`rank ${getRankClass(player.rank)}`}>\r\n                    #{player.rank}\r\n                  </span>\r\n                  <strong className=\"ml-2\">{player.name}</strong>\r\n                </div>\r\n                <div>\r\n                  <span className=\"points\">{player.points} pts</span>\r\n                  <span className=\"ml-2 text-muted\">\r\n                    ({player.wins}-{player.losses}-{player.draws})\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Standings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}