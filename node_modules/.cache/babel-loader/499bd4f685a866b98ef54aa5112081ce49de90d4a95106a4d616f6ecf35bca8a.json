{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projet\\\\FaBSwiss\\\\src\\\\components\\\\TournamentView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { TournamentService, PlayerService, RoundService, MatchService } from '../services/database';\nimport { PairingService } from '../services/pairing';\nimport { TOURNAMENT_STATUS, ROUND_TYPE, createRound } from '../models/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TournamentView = () => {\n  _s();\n  const {\n    id: tournamentId\n  } = useParams();\n  const [tournament, setTournament] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [rounds, setRounds] = useState([]);\n  const [currentMatches, setCurrentMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        const [tournamentData, playersData, roundsData] = await Promise.all([TournamentService.getTournament(tournamentId), PlayerService.getPlayers(tournamentId), RoundService.getRounds(tournamentId)]);\n        setTournament(tournamentData);\n        setPlayers(playersData);\n        setRounds(roundsData);\n\n        // Charger les matches du round actuel\n        if (tournamentData && tournamentData.currentRound > 0) {\n          const matches = await MatchService.getMatchesForRound(tournamentId, tournamentData.currentRound);\n          setCurrentMatches(matches);\n        }\n      } catch (err) {\n        setError('Erreur lors du chargement: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, [tournamentId]);\n  const reloadData = async () => {\n    try {\n      const [tournamentData, playersData, roundsData] = await Promise.all([TournamentService.getTournament(tournamentId), PlayerService.getPlayers(tournamentId), RoundService.getRounds(tournamentId)]);\n      setTournament(tournamentData);\n      setPlayers(playersData);\n      setRounds(roundsData);\n      if (tournamentData && tournamentData.currentRound > 0) {\n        const matches = await MatchService.getMatchesForRound(tournamentId, tournamentData.currentRound);\n        setCurrentMatches(matches);\n      }\n    } catch (err) {\n      setError('Erreur lors du rechargement: ' + err.message);\n    }\n  };\n  const startTournament = async () => {\n    try {\n      const activePlayers = players.filter(p => p.isActive);\n      if (activePlayers.length < 2) {\n        setError('Au moins 2 joueurs actifs sont nécessaires pour commencer le tournoi');\n        return;\n      }\n      await TournamentService.updateTournament(tournamentId, {\n        status: TOURNAMENT_STATUS.SWISS_ROUNDS,\n        currentRound: 1\n      });\n      await startNewRound();\n    } catch (err) {\n      setError('Erreur lors du démarrage: ' + err.message);\n    }\n  };\n  const startNewRound = async () => {\n    try {\n      const activePlayers = players.filter(p => p.isActive);\n      const allMatches = await MatchService.getMatches(tournamentId);\n      const nextRoundNumber = (tournament.currentRound || 0) + 1;\n\n      // Générer les pairings\n      const pairings = PairingService.generateSwissPairings(activePlayers, allMatches, nextRoundNumber);\n\n      // Créer le round\n      const round = createRound(nextRoundNumber, ROUND_TYPE.SWISS);\n      const createdRound = await RoundService.createRound(tournamentId, round);\n\n      // Créer les matches\n      for (const pairing of pairings) {\n        await MatchService.createMatch(tournamentId, createdRound.id, pairing);\n      }\n\n      // Mettre à jour le tournoi\n      await TournamentService.updateTournament(tournamentId, {\n        currentRound: nextRoundNumber\n      });\n      await reloadData();\n    } catch (err) {\n      setError('Erreur lors de la création du round: ' + err.message);\n    }\n  };\n  const startTopCut = async (topCutSize = 8) => {\n    try {\n      await TournamentService.updateTournament(tournamentId, {\n        status: TOURNAMENT_STATUS.TOP_CUT,\n        topCutSize\n      });\n      await reloadData();\n    } catch (err) {\n      setError('Erreur lors du démarrage du top cut: ' + err.message);\n    }\n  };\n  const getStatusText = status => {\n    switch (status) {\n      case TOURNAMENT_STATUS.SETUP:\n        return 'Configuration';\n      case TOURNAMENT_STATUS.SWISS_ROUNDS:\n        return 'Rounds Suisses';\n      case TOURNAMENT_STATUS.TOP_CUT:\n        return 'Top Cut';\n      case TOURNAMENT_STATUS.FINISHED:\n        return 'Terminé';\n      default:\n        return status;\n    }\n  };\n  const canStartTournament = () => {\n    return (tournament === null || tournament === void 0 ? void 0 : tournament.status) === TOURNAMENT_STATUS.SETUP && players.filter(p => p.isActive).length >= 2;\n  };\n  const canStartNewRound = () => {\n    return (tournament === null || tournament === void 0 ? void 0 : tournament.status) === TOURNAMENT_STATUS.SWISS_ROUNDS && currentMatches.length > 0 && currentMatches.every(m => m.result !== 'pending');\n  };\n  const canStartTopCut = () => {\n    return (tournament === null || tournament === void 0 ? void 0 : tournament.status) === TOURNAMENT_STATUS.SWISS_ROUNDS && currentMatches.length > 0 && currentMatches.every(m => m.result !== 'pending');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Chargement du tournoi...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 12\n    }, this);\n  }\n  if (!tournament) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: \"Tournoi introuvable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-between mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: tournament.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status-badge ${tournament.status}`,\n          children: getStatusText(tournament.status)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/tournament/${tournamentId}/players`,\n          className: \"btn btn-secondary\",\n          children: \"G\\xE9rer les Joueurs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/tournament/${tournamentId}/standings`,\n          className: \"btn btn-secondary\",\n          children: \"Classement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"btn btn-secondary\",\n          children: \"Retour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-small\",\n        onClick: () => setError(null),\n        style: {\n          marginLeft: '1rem'\n        },\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: \"Informations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Joueurs inscrits:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 16\n            }, this), \" \", players.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Joueurs actifs:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 16\n            }, this), \" \", players.filter(p => p.isActive).length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Round actuel:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 16\n            }, this), \" \", tournament.currentRound || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Total des rounds:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 16\n            }, this), \" \", rounds.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cr\\xE9\\xE9 le:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 16\n            }, this), \" \", new Date(tournament.createdAt).toLocaleDateString('fr-FR')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-direction-column gap-2\",\n          children: [canStartTournament() && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: startTournament,\n            children: \"Commencer le Tournoi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), canStartNewRound() && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: startNewRound,\n            children: [\"Commencer le Round \", (tournament.currentRound || 0) + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), canStartTopCut() && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning\",\n              onClick: () => startTopCut(8),\n              children: \"Commencer Top 8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning\",\n              onClick: () => startTopCut(4),\n              children: \"Commencer Top 4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), tournament.status === TOURNAMENT_STATUS.TOP_CUT && /*#__PURE__*/_jsxDEV(Link, {\n            to: `/tournament/${tournamentId}/bracket`,\n            className: \"btn btn-primary\",\n            children: \"Voir l'Arbre d'\\xC9limination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), tournament.currentRound > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            children: [\"Round \", tournament.currentRound]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/tournament/${tournamentId}/round/${tournament.currentRound}`,\n            className: \"btn btn-primary\",\n            children: \"G\\xE9rer ce Round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), currentMatches.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucun match pour ce round.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-2\",\n        children: currentMatches.map(match => {\n          const player1 = players.find(p => p.id === match.player1Id);\n          const player2 = players.find(p => p.id === match.player2Id);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"match-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"match-players\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player-name\",\n                  children: (player1 === null || player1 === void 0 ? void 0 : player1.name) || 'Bye'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player-hero\",\n                  children: (player1 === null || player1 === void 0 ? void 0 : player1.hero) || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"vs-indicator\",\n                children: \"VS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player-name\",\n                  children: (player2 === null || player2 === void 0 ? void 0 : player2.name) || 'Bye'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player-hero\",\n                  children: (player2 === null || player2 === void 0 ? void 0 : player2.hero) || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: [match.table && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"Table \", match.table]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 39\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status-badge ${match.result === 'pending' ? 'status-pending' : 'status-complete'}`,\n                children: match.result === 'pending' ? 'En cours' : 'Terminé'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 21\n            }, this)]\n          }, match.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this), rounds.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: \"Historique des Rounds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-3\",\n        children: rounds.map(round => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Round \", round.roundNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 20\n            }, this), \" \", round.type === ROUND_TYPE.SWISS ? 'Suisse' : 'Élimination']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Statut:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 20\n            }, this), \" \", round.isComplete ? 'Terminé' : 'En cours']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/tournament/${tournamentId}/round/${round.roundNumber}`,\n            className: \"btn btn-small btn-secondary\",\n            children: \"Voir les D\\xE9tails\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }, this)]\n        }, round.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(TournamentView, \"bRnzsGikj6TRCRX5ydy+Fe6CAcc=\", false, function () {\n  return [useParams];\n});\n_c = TournamentView;\nexport default TournamentView;\nvar _c;\n$RefreshReg$(_c, \"TournamentView\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","TournamentService","PlayerService","RoundService","MatchService","PairingService","TOURNAMENT_STATUS","ROUND_TYPE","createRound","jsxDEV","_jsxDEV","TournamentView","_s","id","tournamentId","tournament","setTournament","players","setPlayers","rounds","setRounds","currentMatches","setCurrentMatches","loading","setLoading","error","setError","loadData","tournamentData","playersData","roundsData","Promise","all","getTournament","getPlayers","getRounds","currentRound","matches","getMatchesForRound","err","message","reloadData","startTournament","activePlayers","filter","p","isActive","length","updateTournament","status","SWISS_ROUNDS","startNewRound","allMatches","getMatches","nextRoundNumber","pairings","generateSwissPairings","round","SWISS","createdRound","pairing","createMatch","startTopCut","topCutSize","TOP_CUT","getStatusText","SETUP","FINISHED","canStartTournament","canStartNewRound","every","m","result","canStartTopCut","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","to","onClick","style","marginLeft","Date","createdAt","toLocaleDateString","map","match","player1","find","player1Id","player2","player2Id","hero","table","roundNumber","type","isComplete","_c","$RefreshReg$"],"sources":["D:/Projet/FaBSwiss/src/components/TournamentView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { TournamentService, PlayerService, RoundService, MatchService } from '../services/database';\r\nimport { PairingService } from '../services/pairing';\r\nimport { TOURNAMENT_STATUS, ROUND_TYPE, createRound } from '../models/types';\r\n\r\nconst TournamentView = () => {\r\n  const { id: tournamentId } = useParams();\r\n  const [tournament, setTournament] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [rounds, setRounds] = useState([]);\r\n  const [currentMatches, setCurrentMatches] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const [tournamentData, playersData, roundsData] = await Promise.all([\r\n          TournamentService.getTournament(tournamentId),\r\n          PlayerService.getPlayers(tournamentId),\r\n          RoundService.getRounds(tournamentId)\r\n        ]);\r\n        \r\n        setTournament(tournamentData);\r\n        setPlayers(playersData);\r\n        setRounds(roundsData);\r\n\r\n        // Charger les matches du round actuel\r\n        if (tournamentData && tournamentData.currentRound > 0) {\r\n          const matches = await MatchService.getMatchesForRound(\r\n            tournamentId, \r\n            tournamentData.currentRound\r\n          );\r\n          setCurrentMatches(matches);\r\n        }\r\n      } catch (err) {\r\n        setError('Erreur lors du chargement: ' + err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, [tournamentId]);\r\n\r\n  const reloadData = async () => {\r\n    try {\r\n      const [tournamentData, playersData, roundsData] = await Promise.all([\r\n        TournamentService.getTournament(tournamentId),\r\n        PlayerService.getPlayers(tournamentId),\r\n        RoundService.getRounds(tournamentId)\r\n      ]);\r\n      \r\n      setTournament(tournamentData);\r\n      setPlayers(playersData);\r\n      setRounds(roundsData);\r\n\r\n      if (tournamentData && tournamentData.currentRound > 0) {\r\n        const matches = await MatchService.getMatchesForRound(\r\n          tournamentId, \r\n          tournamentData.currentRound\r\n        );\r\n        setCurrentMatches(matches);\r\n      }\r\n    } catch (err) {\r\n      setError('Erreur lors du rechargement: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const startTournament = async () => {\r\n    try {\r\n      const activePlayers = players.filter(p => p.isActive);\r\n      if (activePlayers.length < 2) {\r\n        setError('Au moins 2 joueurs actifs sont nécessaires pour commencer le tournoi');\r\n        return;\r\n      }\r\n\r\n      await TournamentService.updateTournament(tournamentId, {\r\n        status: TOURNAMENT_STATUS.SWISS_ROUNDS,\r\n        currentRound: 1\r\n      });\r\n\r\n      await startNewRound();\r\n    } catch (err) {\r\n      setError('Erreur lors du démarrage: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const startNewRound = async () => {\r\n    try {\r\n      const activePlayers = players.filter(p => p.isActive);\r\n      const allMatches = await MatchService.getMatches(tournamentId);\r\n      const nextRoundNumber = (tournament.currentRound || 0) + 1;\r\n\r\n      // Générer les pairings\r\n      const pairings = PairingService.generateSwissPairings(\r\n        activePlayers,\r\n        allMatches,\r\n        nextRoundNumber\r\n      );\r\n\r\n      // Créer le round\r\n      const round = createRound(nextRoundNumber, ROUND_TYPE.SWISS);\r\n      const createdRound = await RoundService.createRound(tournamentId, round);\r\n\r\n      // Créer les matches\r\n      for (const pairing of pairings) {\r\n        await MatchService.createMatch(tournamentId, createdRound.id, pairing);\r\n      }\r\n\r\n      // Mettre à jour le tournoi\r\n      await TournamentService.updateTournament(tournamentId, {\r\n        currentRound: nextRoundNumber\r\n      });\r\n\r\n      await reloadData();\r\n    } catch (err) {\r\n      setError('Erreur lors de la création du round: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const startTopCut = async (topCutSize = 8) => {\r\n    try {\r\n      await TournamentService.updateTournament(tournamentId, {\r\n        status: TOURNAMENT_STATUS.TOP_CUT,\r\n        topCutSize\r\n      });\r\n      await reloadData();\r\n    } catch (err) {\r\n      setError('Erreur lors du démarrage du top cut: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const getStatusText = (status) => {\r\n    switch (status) {\r\n      case TOURNAMENT_STATUS.SETUP:\r\n        return 'Configuration';\r\n      case TOURNAMENT_STATUS.SWISS_ROUNDS:\r\n        return 'Rounds Suisses';\r\n      case TOURNAMENT_STATUS.TOP_CUT:\r\n        return 'Top Cut';\r\n      case TOURNAMENT_STATUS.FINISHED:\r\n        return 'Terminé';\r\n      default:\r\n        return status;\r\n    }\r\n  };\r\n\r\n  const canStartTournament = () => {\r\n    return tournament?.status === TOURNAMENT_STATUS.SETUP && \r\n           players.filter(p => p.isActive).length >= 2;\r\n  };\r\n\r\n  const canStartNewRound = () => {\r\n    return tournament?.status === TOURNAMENT_STATUS.SWISS_ROUNDS &&\r\n           currentMatches.length > 0 &&\r\n           currentMatches.every(m => m.result !== 'pending');\r\n  };\r\n\r\n  const canStartTopCut = () => {\r\n    return tournament?.status === TOURNAMENT_STATUS.SWISS_ROUNDS &&\r\n           currentMatches.length > 0 &&\r\n           currentMatches.every(m => m.result !== 'pending');\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Chargement du tournoi...</div>;\r\n  }\r\n\r\n  if (!tournament) {\r\n    return <div className=\"error\">Tournoi introuvable</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex-between mb-3\">\r\n        <div>\r\n          <h2>{tournament.name}</h2>\r\n          <span className={`status-badge ${tournament.status}`}>\r\n            {getStatusText(tournament.status)}\r\n          </span>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <Link \r\n            to={`/tournament/${tournamentId}/players`}\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Gérer les Joueurs\r\n          </Link>\r\n          <Link \r\n            to={`/tournament/${tournamentId}/standings`}\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Classement\r\n          </Link>\r\n          <Link to=\"/\" className=\"btn btn-secondary\">\r\n            Retour\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error\">\r\n          {error}\r\n          <button \r\n            className=\"btn btn-small\" \r\n            onClick={() => setError(null)}\r\n            style={{ marginLeft: '1rem' }}\r\n          >\r\n            ✕\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"grid grid-2\">\r\n        {/* Informations du tournoi */}\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"card-title\">Informations</h3>\r\n          </div>\r\n          <div>\r\n            <p><strong>Joueurs inscrits:</strong> {players.length}</p>\r\n            <p><strong>Joueurs actifs:</strong> {players.filter(p => p.isActive).length}</p>\r\n            <p><strong>Round actuel:</strong> {tournament.currentRound || 0}</p>\r\n            <p><strong>Total des rounds:</strong> {rounds.length}</p>\r\n            <p><strong>Créé le:</strong> {new Date(tournament.createdAt).toLocaleDateString('fr-FR')}</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Actions */}\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"card-title\">Actions</h3>\r\n          </div>\r\n          <div className=\"flex flex-direction-column gap-2\">\r\n            {canStartTournament() && (\r\n              <button \r\n                className=\"btn btn-success\"\r\n                onClick={startTournament}\r\n              >\r\n                Commencer le Tournoi\r\n              </button>\r\n            )}\r\n\r\n            {canStartNewRound() && (\r\n              <button \r\n                className=\"btn btn-primary\"\r\n                onClick={startNewRound}\r\n              >\r\n                Commencer le Round {(tournament.currentRound || 0) + 1}\r\n              </button>\r\n            )}\r\n\r\n            {canStartTopCut() && (\r\n              <div>\r\n                <button \r\n                  className=\"btn btn-warning\"\r\n                  onClick={() => startTopCut(8)}\r\n                >\r\n                  Commencer Top 8\r\n                </button>\r\n                <button \r\n                  className=\"btn btn-warning\"\r\n                  onClick={() => startTopCut(4)}\r\n                >\r\n                  Commencer Top 4\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {tournament.status === TOURNAMENT_STATUS.TOP_CUT && (\r\n              <Link \r\n                to={`/tournament/${tournamentId}/bracket`}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Voir l'Arbre d'Élimination\r\n              </Link>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Round actuel */}\r\n      {tournament.currentRound > 0 && (\r\n        <div className=\"card mt-3\">\r\n          <div className=\"card-header\">\r\n            <div className=\"flex-between\">\r\n              <h3 className=\"card-title\">Round {tournament.currentRound}</h3>\r\n              <Link \r\n                to={`/tournament/${tournamentId}/round/${tournament.currentRound}`}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Gérer ce Round\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          {currentMatches.length === 0 ? (\r\n            <p>Aucun match pour ce round.</p>\r\n          ) : (\r\n            <div className=\"grid grid-2\">\r\n              {currentMatches.map(match => {\r\n                const player1 = players.find(p => p.id === match.player1Id);\r\n                const player2 = players.find(p => p.id === match.player2Id);\r\n                \r\n                return (\r\n                  <div key={match.id} className=\"match-card\">\r\n                    <div className=\"match-players\">\r\n                      <div className=\"player-info\">\r\n                        <div className=\"player-name\">{player1?.name || 'Bye'}</div>\r\n                        <div className=\"player-hero\">{player1?.hero || ''}</div>\r\n                      </div>\r\n                      <div className=\"vs-indicator\">VS</div>\r\n                      <div className=\"player-info\">\r\n                        <div className=\"player-name\">{player2?.name || 'Bye'}</div>\r\n                        <div className=\"player-hero\">{player2?.hero || ''}</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"text-center\">\r\n                      {match.table && <p><strong>Table {match.table}</strong></p>}\r\n                      <span className={`status-badge ${match.result === 'pending' ? 'status-pending' : 'status-complete'}`}>\r\n                        {match.result === 'pending' ? 'En cours' : 'Terminé'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Historique des rounds */}\r\n      {rounds.length > 0 && (\r\n        <div className=\"card mt-3\">\r\n          <div className=\"card-header\">\r\n            <h3 className=\"card-title\">Historique des Rounds</h3>\r\n          </div>\r\n          <div className=\"grid grid-3\">\r\n            {rounds.map(round => (\r\n              <div key={round.id} className=\"card\">\r\n                <h4>Round {round.roundNumber}</h4>\r\n                <p><strong>Type:</strong> {round.type === ROUND_TYPE.SWISS ? 'Suisse' : 'Élimination'}</p>\r\n                <p><strong>Statut:</strong> {round.isComplete ? 'Terminé' : 'En cours'}</p>\r\n                <Link \r\n                  to={`/tournament/${tournamentId}/round/${round.roundNumber}`}\r\n                  className=\"btn btn-small btn-secondary\"\r\n                >\r\n                  Voir les Détails\r\n                </Link>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TournamentView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}